{
  "openapi": "3.0.0",
  "info": {
    "title": "Pax API",
    "version": "1.0.0",
    "description": "Documentation for the Pax API, powering automated room bookings through real-time sensor data. This API handles users, rooms, and sensors to streamline presence-based reservation management."
  },
  "servers": [
    {
      "url": "http://localhost:13000"
    },
    {
      "description": "Mock server",
      "url": "https://virtserver.swaggerhub.com/alicegmn/pax-api/dev-oas3"
    }
  ],
  "paths": {
    "/bookings": {
      "get": {
        "summary": "Get all bookings with room name and user email",
        "tags": [
          "Bookings"
        ],
        "responses": {
          "200": {
            "description": "A list of bookings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookingWithRelations"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new booking",
        "tags": [
          "Bookings"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Booking"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Booking created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              }
            }
          },
          "400": {
            "description": "Invalid room_id or user_id"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/bookings/{id}": {
      "get": {
        "summary": "Get a booking by ID",
        "tags": [
          "Bookings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Booking ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Booking found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              }
            }
          },
          "404": {
            "description": "Booking not found"
          }
        }
      },
      "put": {
        "summary": "Update a booking by ID",
        "tags": [
          "Bookings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Booking ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Booking"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Booking updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              }
            }
          },
          "400": {
            "description": "Invalid room_id or user_id"
          },
          "404": {
            "description": "Booking not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a booking by ID",
        "tags": [
          "Bookings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Booking ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Booking deleted successfully"
          },
          "404": {
            "description": "Booking not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/rooms": {
      "get": {
        "summary": "Get all rooms",
        "tags": [
          "Rooms"
        ],
        "responses": {
          "200": {
            "description": "A list of rooms",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Room"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new room",
        "tags": [
          "Rooms"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoomInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Room created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            }
          },
          "500": {
            "description": "Error creating room"
          }
        }
      }
    },
    "/rooms/{id}": {
      "get": {
        "summary": "Get a room by ID",
        "tags": [
          "Rooms"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            }
          },
          "404": {
            "description": "Room not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a room",
        "tags": [
          "Rooms"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoomInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Room updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            }
          },
          "404": {
            "description": "Room not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a room",
        "tags": [
          "Rooms"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Room deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "room": {
                      "$ref": "#/components/schemas/Room"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Room not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error fetching users"
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "500": {
            "description": "Error creating user"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get a user by ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Error fetching user"
          }
        }
      },
      "put": {
        "summary": "Update a user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Error updating user"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Error deleting user"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Booking": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "room_id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          },
          "start_time": {
            "type": "string",
            "format": "date-time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BookingWithRelations": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "start_time": {
            "type": "string",
            "format": "date-time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time"
          },
          "room_name": {
            "type": "string"
          },
          "user_email": {
            "type": "string"
          }
        }
      },
      "Room": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "available": {
            "type": "boolean"
          },
          "air_quality": {
            "type": "number"
          },
          "screen": {
            "type": "boolean"
          },
          "floor": {
            "type": "integer"
          },
          "chairs": {
            "type": "integer"
          },
          "whiteboard": {
            "type": "boolean"
          },
          "projector": {
            "type": "boolean"
          }
        }
      },
      "CreateRoomInput": {
        "type": "object",
        "required": [
          "name",
          "description",
          "available",
          "air_quality",
          "screen",
          "floor",
          "chairs",
          "whiteboard",
          "projector"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "available": {
            "type": "boolean"
          },
          "air_quality": {
            "type": "number"
          },
          "screen": {
            "type": "boolean"
          },
          "floor": {
            "type": "integer"
          },
          "chairs": {
            "type": "integer"
          },
          "whiteboard": {
            "type": "boolean"
          },
          "projector": {
            "type": "boolean"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "CreateUserInput": {
        "type": "object",
        "required": [
          "firstname",
          "lastname",
          "email",
          "password"
        ],
        "properties": {
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        }
      }
    }
  }
}